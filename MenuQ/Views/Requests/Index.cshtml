@model IEnumerable<BussinessObject.DTOs.CustomerRequestDTO>

@{
    ViewData["Title"] = "Danh sách Yêu cầu";
    Layout = "~/Views/Shared/_EmployeeLayout.cshtml";
}

<html lang="vi">

<head>
    <style>
        .table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 1rem;
            background-color: #fff;
        }

        .table th,
        .table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
        }

        .table th {
            background-color: #f8f9fa;
            font-weight: 500;
            text-transform: uppercase;
            font-size: 0.875rem;
            color: #6c757d;
        }

        .status-indicator {
            display: inline-block;
            padding: 4px 10px;
            border-radius: 4px;
            font-size: 11px;
            font-weight: normal;
            text-align: center;
            /* Định dạng viền, sẽ được thay đổi dựa trên trạng thái */
        }

        .status-in-process {
            color: #ffffff;
            background-color: #008cff;
        }

        .status-completed {
            color: #ffffff;
            background-color: #28a745;
        }

        .status-cancelled {
            color: #ffffff;
            background-color: #ff0000;
        }

        .action-buttons {
            white-space: nowrap;
            width: 200px;
            /* Fixed width for action column */
        }

        .btn {
            padding: 6px 12px;
            border-radius: 4px;
            border: none;
            font-size: 12px;
            cursor: pointer;
            width: 90px;
            /* Fixed width for buttons */
            text-align: center;
        }

        .btn-cancel {
            color: #dc3545;
            background-color: white;
            border: 1px solid #dc3545;
            margin-right: 8px;
        }

        .btn-action {
            color: white;
            background-color: #0d6efd;
        }

        .card {
            background-color: #fff;
            border-radius: 0.5rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            margin: 1rem;
        }

        .card-body {
            padding: 1.5rem;
        }

        .card-title {
            margin-bottom: 1rem;
            font-size: 1.25rem;
            font-weight: 600;
        }
    </style>
</head>

<body>
    <main id="main" class="main">
        <div
            class="card-header no-bg bg-transparent d-flex align-items-center px-0 justify-content-between border-bottom flex-wrap">
            <h3 class="fw-bold mb-0 py-3 pb-2">Yêu cầu</h3>
            <div class="col-auto py-2 w-sm-100">
                <ul class="nav nav-tabs tab-body-header rounded invoice-set" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link @(ViewBag.CurrentType == "All" ? "active" : "")" asp-action="Index"
                            asp-controller="Requests" asp-route-type="All">
                            Tất cả <span class="badge bg-secondary">@ViewBag.Counts.All</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewBag.CurrentType == "FoodOrder" ? "active" : "")" asp-action="Index"
                            asp-controller="Requests" asp-route-type="FoodOrder">
                            Gọi món <span class="badge bg-secondary">@ViewBag.Counts.FoodOrder</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewBag.CurrentType == "ServiceCall" ? "active" : "")" asp-action="Index"
                            asp-controller="Requests" asp-route-type="ServiceCall">
                            Gọi phục vụ <span class="badge bg-secondary">@ViewBag.Counts.Waiter</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewBag.CurrentType == "Payment" ? "active" : "")" asp-action="Index"
                            asp-controller="Requests" asp-route-type="Payment">
                            Thanh toán <span class="badge bg-secondary">@ViewBag.Counts.Checkout</span>
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <section class="section">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-body">
                            <table class="table datatable">
                                <thead>
                                    <tr>
                                        <th data-orderable="false">Bàn</th>
                                        <th>Thời gian</th>
                                        <th data-orderable="false">Khách hàng</th>
                                        <th data-orderable="false">Yêu cầu</th>
                                        <th data-orderable="false">Ghi chú</th>
                                        <th data-orderable="false">Hành động</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var req in Model)
                                    {
                                        <tr>
                                            <td>Bàn @req.TableNumber</td>
                                            <td>@req.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                            <td>@req.CustomerName</td>
                                            <td>@req.RequestType</td>
                                            <td>@req.Note</td>
                                            <td>
                                                @if (req.RequestType == "Food Order") // RequestTypeID = 1
                                                {
                                                    <form asp-action="Details" asp-route-id="@req.RequestId" method="post"
                                                        class="d-inline">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-action">Xử lý</button>
                                                    </form>
                                                }
                                                else if (req.RequestType == "Waiter Asssistant") // RequestTypeID = 2
                                                {
                                                    <button type="button" class="btn btn-cancel btn-open-cancel-modal"
                                                        data-bs-toggle="modal" data-bs-target="#cancelModal"
                                                        data-request-id="@req.RequestId">
                                                        Hủy
                                                    </button>

                                                    <form asp-action="Accept" asp-route-id="@req.RequestId" method="post"
                                                        class="d-inline">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-action">Phục vụ</button>
                                                    </form>
                                                }
                                                else if (req.RequestType == "Checkout") // RequestTypeID = 3
                                                {
                                                    <button type="button" class="btn btn-action btn-payment"
                                                        data-customer-id="@req.CustomerId" data-payment-method="@req.Note">
                                                        Thanh toán
                                                    </button>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>

                                <!-- Modal Hủy Yêu Cầu -->
                                <div class="modal fade" id="cancelModal" tabindex="-1"
                                    aria-labelledby="cancelModalLabel" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="cancelModalLabel">Xác nhận hủy yêu cầu
                                                </h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                                    aria-label="Close"></button>
                                            </div>
                                            <form id="cancelForm" asp-action="Reject" method="post">
                                                @Html.AntiForgeryToken()
                                                <div class="modal-body">
                                                    <input type="hidden" id="cancelRequestId" name="requestId">
                                                    <p>Bạn có chắc chắn muốn hủy yêu cầu này không?</p>
                                                    <label for="reasonId">Chọn lý do hủy:</label>
                                                    <select id="reasonId" name="reasonId" class="form-control" required>
                                                        <option value="">-- Chọn lý do --</option>
                                                        @foreach (var reason in ViewBag.CancellationReasons as SelectList)
                                                        {
                                                            <option value="@reason.Value">@reason.Text</option>
                                                        }
                                                    </select>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary"
                                                        data-bs-dismiss="modal">Hủy bỏ</button>
                                                    <button type="submit" id="confirmCancel" class="btn btn-danger"
                                                        disabled>Đồng ý</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>

                            </table>

                        </div>
                    </div>
                    <!-- End Table with stripped rows -->

                </div>
            </div>
        </section>

    </main><!-- End #main -->
</body>

</html>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var cancelModal = document.getElementById("cancelModal");

        cancelModal.addEventListener("show.bs.modal", function (event) {
            var button = event.relatedTarget; // Nút bấm mở modal
            var requestId = button.getAttribute("data-request-id"); // Lấy RequestId

            var modalInput = document.getElementById("cancelRequestId");
            modalInput.value = requestId; // Gán RequestId vào form

            // Reset trạng thái nút khi mở modal
            var confirmButton = document.getElementById("confirmCancel");
            confirmButton.disabled = true;
        });

        // Khi chọn lý do, bật nút Đồng ý
        document.getElementById("reasonId").addEventListener("change", function () {
            var confirmButton = document.getElementById("confirmCancel");
            confirmButton.disabled = !this.value; // Nếu không chọn thì vô hiệu hóa nút
        });

        // Xử lý chuyển hướng khi bấm "Thanh toán"
        document.querySelectorAll(".btn-payment").forEach(button => {
            button.addEventListener("click", function () {
                var customerId = this.getAttribute("data-customer-id");
                var paymentMethod = this.getAttribute("data-payment-method");
                window.location.href = `/Invoice/PaymentDetails?customerId=${customerId}&paymentMethod=${paymentMethod}`;
            });
        });
    });

    window.addEventListener("pageshow", function (event) {
        if (event.persisted) { // Nếu trang được load từ cache khi nhấn "Back"
            console.log("🔄 Page restored from cache, reloading...");
            window.location.reload(); // Reload trang để cập nhật dữ liệu mới nhất
        }
    });
</script>
