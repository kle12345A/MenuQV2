@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common
@using X.PagedList.Web.Common
@model IPagedList<DataAccess.Models.Request>

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "~/Areas/Admin/Views/_AdminLayout.cshtml";
    ViewData["Title"] = "Danh sách Yêu cầu";
}

<!-- Hiển thị thông báo -->
@if (TempData["Message"] != null)
{
    <div class="alert alert-info">@TempData["Message"]</div>
}

<!-- Tiêu đề -->
<section class="content-header">
    <div class="container-fluid">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index">Trang chủ</a></li>
            <li class="breadcrumb-item active">Yêu cầu</li>
        </ol>
        <div class="row mb-2">
            <div class="col-sm-6">
            </div>
        </div>
    </div>
</section>

<!-- Nội dung chính -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <h3 class="card-title">Danh sách yêu cầu</h3>
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                    </div>

                    <div class="card-body">
                        <table class="table table-hover table-bordered text-center align-middle">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Mã Yêu cầu</th>
                                    <th>Khách hàng</th>
                                    <th>Trạng thái</th>
                                    <th>Ngày tạo</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Any())
                                {
                                    @foreach (var req in Model)
                                    {
                                        <tr>
                                            <td>@req.RequestId</td>
                                            <td>@req.Customer?.CustomerName</td>
                                            <td>@req.RequestStatus?.StatusName</td>
                                            <td>@req.CreatedAt?.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <a asp-action="Details" asp-route-id="@req.RequestId" class="btn btn-info">Chi tiết</a>
                                                <form asp-action="Accept" asp-route-id="@req.RequestId" method="post" class="d-inline">
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit" class="btn btn-success">Chấp nhận</button>
                                                </form>
                                                <form asp-action="Reject" asp-route-id="@req.RequestId" method="post" class="d-inline">
                                                    @Html.AntiForgeryToken()
                                                    <select name="reasonId" class="form-control d-inline-block" style="width: auto;">
                                                        @foreach (var reason in ViewBag.CancellationReasons as SelectList)
                                                        {
                                                            <option value="@reason.Value">@reason.Text</option>
                                                        }
                                                    </select>
                                                    <button type="submit" class="btn btn-danger">Từ chối</button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5">Không có yêu cầu nào để hiển thị.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <!-- Phân trang -->
                        <!-- Phân trang -->
                        <div class="d-flex justify-content-center">
                            @Html.PagedListPager(Model, page => Url.Action("Index", new { type = ViewBag.Type, page }),
                                     new PagedListRenderOptions
                            {
                                Display = PagedListDisplayMode.IfNeeded,
                                UlElementClasses = new[] { "pagination" },
                                LiElementClasses = new[] { "page-item" },
                                PageClasses = new[] { "page-link" }
                            })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    .table-hover tbody tr:hover {
        background-color: #f8f9fa;
    }

    .img-thumbnail {
        border-radius: 8px;
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
    }

    .badge {
        font-size: 14px;
        padding: 5px 10px;
        border-radius: 5px;
    }

    .text-success {
        color: #28a745;
        font-weight: bold;
    }
</style>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">

    <script>
        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';

            if (successMessage) {
                toastr.success(successMessage, 'Thành công!', { timeOut: 3000 });
            }
            if (errorMessage) {
                toastr.error(errorMessage, 'Lỗi!', { timeOut: 3000 });
            }
        });

        window.addEventListener("pageshow", function (event) {
            if (event.persisted) { // Nếu trang được load từ cache khi nhấn "Back"
                console.log("🔄 Page restored from cache, reloading...");
                window.location.reload(); // Reload trang để cập nhật dữ liệu mới nhất
            }
        });
    </script>
}