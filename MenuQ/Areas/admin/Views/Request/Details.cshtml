@model DataAccess.Models.Request
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "~/Areas/Admin/Views/_AdminLayout.cshtml";
    ViewData["Title"] = "Chi tiết Yêu cầu";
}

<!-- Hiển thị thông báo -->
@if (TempData["Message"] != null)
{
    <div class="alert alert-info">@TempData["Message"]</div>
}

<!-- Tiêu đề -->
<section class="content-header">
    <div class="container-fluid">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index">Trang chủ</a></li>
            <li class="breadcrumb-item active">Yêu cầu</li>
            <li class="breadcrumb-item active">Chi tiết yêu cầu</li>
        </ol>
        <div class="row mb-2">
            <div class="col-sm-6">
            </div>
        </div>
    </div>
</section>

<!-- Nội dung chính -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <h3 class="card-title">Danh sách yêu cầu</h3>
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                    </div>

                    <div class="card-body">
                        <!-- Thông tin tổng quan yêu cầu -->
                        <div>
                            <p><strong>Mã yêu cầu:</strong> @Model.RequestId</p>
                            <p><strong>Khách hàng:</strong> @Model.Customer?.CustomerName</p>
                            <p><strong>Trạng thái:</strong> @Model.RequestStatus?.StatusName</p>
                            <p><strong>Ngày tạo:</strong> @Model.CreatedAt?.ToString("dd/MM/yyyy")</p>
                        </div>

                        <!-- Chi tiết đơn hàng -->
                        <h3>Chi tiết đơn hàng</h3>
                        <table class="table table-hover table-bordered text-center align-middle">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Mã món</th>
                                    <th>Tên món</th>
                                    <th>Số lượng</th>
                                    <th>Giá</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var detail in Model.OrderDetails)
                                {
                                    <tr>
                                        <td>@detail.ItemId</td>
                                        <td>@detail.Item?.ItemName</td>
                                        <td>@detail.Quantity</td>
                                        <td>@detail.Price</td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <!-- Nút hành động -->
                        <div class="mt-3">
                            <form asp-action="Accept" asp-route-id="@Model.RequestId" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-success">Chấp nhận</button>
                            </form>

                            <form asp-action="Reject" asp-route-id="@Model.RequestId" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <select name="reasonId" class="form-control d-inline-block" style="width: auto;">
                                    @foreach (var reason in ViewBag.CancellationReasons as SelectList)
                                    {
                                        <option value="@reason.Value">@reason.Text</option>
                                    }
                                </select>
                                <button type="submit" class="btn btn-danger">Từ chối</button>
                            </form>

                            <a asp-area="Admin" asp-controller="Request" asp-action="" class="btn btn-secondary">Quay lại</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link href("~ /css/request-detail.css" rel="stylesheet" />

    <script>
        var requestId = @Model.RequestId;
        var hasReset = false;

        function resetRequestStatus() {
            if (hasReset) return; // Ngăn gọi API nhiều lần
            hasReset = true;

            console.log("🔄 Sending reset request for RequestID:", requestId);

            fetch('/Requests/ResetStatus', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: requestId })
            }).then(response => response.json()).then(data => {
                console.log("✅ Reset Response:", data);
                if (data.success) {
                    window.location.href = "/Requests/Index"; // Quay lại danh sách yêu cầu
                }
            }).catch(error => console.error('❌ Reset Error:', error));
        }

        // ✅ Khi nhấn nút "Quay lại" trong giao diện
        function handleBack() {
            resetRequestStatus();
        }

        // ✅ Khi nhấn "Back" trên trình duyệt (không phải reload)
        window.addEventListener("pageshow", function (event) {
            if (event.persisted) {
                console.log("🔄 Page restored from cache, reloading to update data...");
                window.location.reload(); // Reload trang để cập nhật dữ liệu mới
            }
        });

        // ✅ Khi đóng tab hoặc tắt trình duyệt (không phải reload)
        window.addEventListener("beforeunload", function (event) {
            resetRequestStatus();
        });

        // ✅ Khi người dùng reload trang, đảm bảo trang lấy dữ liệu mới nhất
        if (performance.navigation.type === 1) {
            console.log("🔄 Page is being reloaded, forcing fresh data...");
            window.location.href = window.location.href; // Reload mà không dùng cache
        }

        // Toast messages
        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';

            if (successMessage) {
                toastr.success(successMessage, 'Thành công!', { timeOut: 3000 });
            }
            if (errorMessage) {
                toastr.error(errorMessage, 'Lỗi!', { timeOut: 3000 });
            }
        });
    </script>
}