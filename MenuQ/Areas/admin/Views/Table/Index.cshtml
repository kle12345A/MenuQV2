@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model List<MenuQ.Models.TableArea>

@{
    ViewData["Title"] = "Thiết lập mã QR";
    Layout = "~/Areas/Admin/Views/_AdminLayout.cshtml";
}

<!-- Liên kết các thư viện cần thiết -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

<style>
    .badge {
        font-size: 14px;
        padding: 5px 10px;
        border-radius: 5px;
    }

    .badge-success {
        background-color: #28a745;
        color: white;
    }

    .badge-danger {
        background-color: #dc3545;
        color: white;
    }

    .qr-container {
        text-align: center;
    }
</style>

<!-- Tiêu đề -->
<section class="content-header">
    <div class="container-fluid">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-action="Index">Trang chủ</a></li>
            <li class="breadcrumb-item active">Thiết lập mã QR</li>
        </ol>
    </div>
</section>

<!-- Nội dung chính -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <!-- Phần Tạo mã QR -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Tạo mã QR</h3>
                    </div>
                    <div class="card-body">
                        <form method="post" enctype="multipart/form-data" id="qrForm">
                            <div class="form-group">
                                <label for="area-input">Chọn khu vực</label>
                                <select id="area-input" class="form-control" name="areaId" required onchange="updateMaxTableNumber()">
                                    @if (Model != null && Model.Any())
                                    {
                                        @foreach (var area in Model)
                                        {
                                            <option value="@area.AreaId" data-max="@area.TableCount">@area.AreaName</option>
                                        }
                                    }
                                    else
                                    {
                                        <option value="">Không có khu vực</option>
                                    }
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="table-input">Số Lượng bàn</label>
                                <input type="number" id="table-input" class="form-control" name="tableNumber" placeholder="Nhập số bàn" required min="1" max="100" onchange="validateForm()" />
                                <span id="table-error" style="color: red; font-size: 10px"></span>
                            </div>
                            <div class="form-group">
                                <label for="TableInput">Bàn</label>
                                <div class="input-group">
                                    <input id="TableInput" type="text" class="form-control" placeholder="Chọn bàn" readonly name="SelectedTables">
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-secondary" type="button" id="editTableBtn" data-toggle="modal" data-target="#tableModal">
                                            <i class="fas fa-pencil-alt"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="top-text">Chữ trên QR</label>
                                <input type="text" id="top-text" class="form-control" name="topText" placeholder="Nhập chữ trên QR" onchange="generateQRCodeWithCustomOptions()" maxlength="50" />
                            </div>

                            <div class="form-group">
                                <label for="bottom-text">Chữ dưới QR</label>
                                <input type="text" id="bottom-text" class="form-control" name="bottomText" placeholder="Nhập chữ dưới QR" onchange="generateQRCodeWithCustomOptions()" maxlength="50" />
                            </div>

                            <div class="form-group">
                                <label for="color-input">Màu QR</label>
                                <input type="color" id="color-input" class="form-control" name="color" value="#000000" onchange="generateQRCodeWithCustomOptions()" />
                            </div>

                            <div class="form-group">
                                <label for="background-color-input">Màu nền</label>
                                <input type="color" id="background-color-input" class="form-control" name="backgroundColor" value="#ffffff" onchange="generateQRCodeWithCustomOptions()" />
                            </div>

                            <button type="button" class="btn btn-primary btn-block" onclick="generateQRCodeWithCustomOptions()">Tạo mã QR</button>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Phần Mẫu in -->
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Mẫu in</h3>
                    </div>
                    <div class="card-body text-center">
                        <div class="qr-container">
                            <div class="text-top" id="textTop"></div>
                            <div class="text-top1" id="textTop1"></div>
                            <canvas id="qrcode1"></canvas>
                            <div class="text-bottom" id="textBottom"></div>
                        </div>
                    </div>
                    <div class="card-footer d-flex justify-content-center">
                        <button type="button" id="printButton" class="btn btn-secondary" style="display:none" onclick="redirectToPrintQR()">Tải mẫu in</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Modal chọn bàn -->
<div class="modal fade" id="tableModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chọn bàn</h5>
                <button type="button" class="close" data-dismiss="modal">×</button>
            </div>
            <div class="modal-body">
                @foreach (var area in Model)
                {
                    <div class="area-section" data-area-id="@area.AreaId">
                        <strong>@area.AreaName</strong>
                        <div class="d-flex flex-wrap">
                            @for (var i = 0; i < area.Tables.Count; i++)
                            {
                                <label class="m-1">
                                    <input type="checkbox" class="table-checkbox" value="@area.TableNumbers[i]">
                                    @area.TableNumbers[i]
                                </label>
                            }
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="confirmTables">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js"></script>
<script src="~/js/TableIndex.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const areaSelect = document.getElementById("area-input");
        const tableInput = document.getElementById("table-input");
        const textTop1 = document.getElementById("textTop1");

        function updateTextTop1() {
            const areaName = areaSelect.options[areaSelect.selectedIndex].text;
            const firstTable = document.querySelector('.table-checkbox:checked') ? document.querySelector('.table-checkbox:checked').value : "";

            if (areaName && firstTable) {
                textTop1.innerText = `${areaName} - Bàn ${firstTable}`;
            } else {
                textTop1.innerText = areaName ? `${areaName} - Chọn bàn` : "";
            }
        }

        function refreshTableList() {
            const selectedAreaId = areaSelect.value;
            document.querySelectorAll('.area-section').forEach(section => {
                if (section.getAttribute('data-area-id') === selectedAreaId) {
                    section.style.display = 'block';
                } else {
                    section.style.display = 'none';
                }
            });
            document.querySelectorAll('.table-checkbox').forEach(checkbox => {
                checkbox.checked = false;
            });
            document.getElementById("TableInput").value = "";
        }

        areaSelect.addEventListener("change", function () {
            updateTextTop1();
            updateMaxTableNumber();
            refreshTableList();
        });

        tableInput.addEventListener("input", updateTextTop1);

        function initialize() {
            const areaSelect = document.getElementById("area-input");
            if (areaSelect.options.length > 0) {
                areaSelect.selectedIndex = 0;
                updateTextTop1();
                updateMaxTableNumber();
                refreshTableList();
                areaSelect.dispatchEvent(new Event('change'));
            }
        }

        window.onload = initialize;
    });

    document.getElementById("confirmTables").addEventListener("click", function () {
        let selectedTables = [];
        document.querySelectorAll('.table-checkbox:checked').forEach(checkbox => {
            selectedTables.push(checkbox.value);
        });

        let tableText = selectedTables.length > 0 ? selectedTables.join(", ") : "-";
        document.getElementById("TableInput").value = tableText;
        document.getElementById("SelectedTable").innerText = tableText;

        let area = document.getElementById("area-input").options[document.getElementById("area-input").selectedIndex].text;
        document.getElementById("SelectedArea").innerText = area;

        if (selectedTables.length > 0) {
            let firstTable = selectedTables[0];
            let qrData = encodeURIComponent(`Khu vực: ${area} - Bàn: ${firstTable}`);
            document.getElementById("QRImage").src = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${qrData}`;
            document.getElementById("textTop1").innerText = `${area} - Bàn ${firstTable}`;
        } else {
            document.getElementById("QRImage").src = "";
            document.getElementById("textTop1").innerText = "";
        }

        $('#tableModal').modal('hide');
    });

    function validateForm() {
        let isValid = true;
        const tableInput = document.getElementById("table-input");
        const tableError = document.getElementById("table-error");

        const table = parseInt(tableInput.value, 10);
        const maxTableNumber = parseInt(tableInput.max, 10);

        if (table < 1 || table > maxTableNumber || isNaN(table)) {
            tableError.style.display = "inline";
            tableError.textContent = `Please enter a valid table number (1-${maxTableNumber}).`;
            isValid = false;
            clearQRCode()
        } else {
            tableError.style.display = "none";
            generateQRCodeWithCustomOptions()
            tableInput.setAttribute("max", maxTableNumber);
        }
        return isValid;
    }

    function updateMaxTableNumber() {
        var areaSelect = document.getElementById("area-input");
        var selectedOption = areaSelect.options[areaSelect.selectedIndex];
        var maxTableNumber = selectedOption.getAttribute("data-max");
        const tableInput = document.getElementById("table-input");

        tableInput.setAttribute("max", maxTableNumber);
        tableInput.value = "";
        document.getElementById("table-error").style.display = "none";
    }

    function generateQRCodeWithCustomOptions() {
        const color = document.getElementById("color-input").value;
        const backgroundColor = document.getElementById("background-color-input").value;
        const topText = document.getElementById("top-text").value;
        const bottomText = document.getElementById("bottom-text").value;

        document.getElementById("textTop").innerText = topText;
        document.getElementById("textBottom").innerText = bottomText;

        const baseURL = "https://sample.com";
        if (baseURL.trim() !== "") {
            const urlWithParams = `Thank For Use MenuQ`;
            generateQRCode("qrcode1", urlWithParams, color, backgroundColor);
        } else {
            alert("Please enter a base URL to generate a QR code.");
        }
    }

    function generateQRCode(canvasId, text, color, backgroundColor) {
        const canvas = document.getElementById(canvasId);
        const ctx = canvas.getContext("2d");
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        const qrSize = 200;
        canvas.width = qrSize;
        canvas.height = qrSize;

        QRCode.toCanvas(canvas, text, {
            color: {
                dark: color,
                light: backgroundColor
            },
            width: qrSize,
        }, function (error) {
            if (error) console.error(error);
            else {
                document.getElementById("printButton").style.display = "block";
            }
        });
    }

    document.getElementById("editTableBtn").addEventListener("click", function () {
        $('#tableModal').modal('show');
    });

    function clearQRCode() {
        const canvas = document.getElementById("qrcode1");
        const ctx = canvas.getContext("2d");
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        document.getElementById("textTop").innerText = "";
        document.getElementById("textBottom").innerText = "";
        document.getElementById("printButton").style.display = "none";
    }

    function redirectToPrintQR() {
        const areaId = document.getElementById("area-input").value;
        const tableNumber = document.getElementById("table-input").value;
        const topText = encodeURIComponent(document.getElementById("top-text").value);
        const bottomText = encodeURIComponent(document.getElementById("bottom-text").value);
        const color = encodeURIComponent(document.getElementById("color-input").value);
        const backgroundColor = encodeURIComponent(document.getElementById("background-color-input").value);
        let selectedTables = document.getElementById("TableInput").value;

        if (!areaId || !tableNumber) {
            alert("Vui lòng chọn khu vực và nhập số bàn.");
            return;
        }

        window.location.href = `/Admin/Table/PrintQR?areaId=${areaId}&tableCount=${tableNumber}&topText=${topText}&bottomText=${bottomText}&color=${color}&backgroundColor=${backgroundColor}&selectedTables=${encodeURIComponent(selectedTables)}`;
    }
</script>