@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model DataAccess.DTOs.DashboardDTO
@{
    Layout = "~/Areas/Admin/Views/_AdminLayout.cshtml";
}

<section class="section dashboard">
    <div class="row">

        <!-- Left side columns -->
        <div class="col-lg-8">
            <div class="row">

                <!-- Revenue Card -->
                <div class="col-xxl-4 col-md-6">
                    <div class="card info-card revenue-card">
                        <div class="filter">
                            <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                            <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                                <li class="dropdown-header text-start">
                                    <h6>Filter</h6>
                                </li>
                                <li><a class="dropdown-item" href="#" onclick="changeRevenueFilter('Today')">Today</a></li>
                                <li><a class="dropdown-item" href="#" onclick="changeRevenueFilter('This Month')">This Month</a></li>
                                <li><a class="dropdown-item" href="#" onclick="changeRevenueFilter('This Year')">This Year</a></li>
                            </ul>
                        </div>

                        <div class="card-body">
                            <h5 class="card-title">Revenue <span id="revenue-filter-label">| @ViewBag.FilterLabel</span></h5>
                            <div class="d-flex align-items-center">
                                <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                                    <i class="bi bi-currency-dollar"></i>
                                </div>
                                <div class="ps-3">
                                    <h6 id="revenue-value">@Model.TotalRevenue.ToString("#,##") VNĐ</h6>
                                    <span id="revenue-change-percentage" class="@(ViewBag.SelectedChangePercentage >= 0 ? "text-success" : "text-danger") small pt-1 fw-bold">
                                        @(Math.Abs((double)ViewBag.SelectedChangePercentage).ToString("F2"))%
                                    </span>
                                    <span id="revenue-change-text" class="text-muted small pt-2 ps-1">
                                        @(ViewBag.SelectedChangePercentage >= 0 ? "increase" : "decrease")
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div><!-- End Revenue Card -->
                <!-- Customers Card -->
                <div class="col-xxl-4 col-xl-12">
                    <div class="card info-card customers-card">
                        <div class="filter">
                            <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                            <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                                <li class="dropdown-header text-start">
                                    <h6>Filter</h6>
                                </li>
                                <li><a class="dropdown-item" href="#" onclick="changeCustomerFilter('Today')">Today</a></li>
                                <li><a class="dropdown-item" href="#" onclick="changeCustomerFilter('This Month')">This Month</a></li>
                                <li><a class="dropdown-item" href="#" onclick="changeCustomerFilter('This Year')">This Year</a></li>
                            </ul>
                        </div>

                        <div class="card-body">
                            <h5 class="card-title">Customers <span id="customer-filter-label">| @ViewBag.CustomerFilterLabel</span></h5>
                            <div class="d-flex align-items-center">
                                <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                                    <i class="bi bi-people"></i>
                                </div>
                                <div class="ps-3">
                                    <h6 id="customer-count">
                                        @if (ViewBag.CustomerFilter == "Today")
                                        {
                                            @Model.TotalCustomersToday
                                        }
                                        else if (ViewBag.CustomerFilter == "This Month")
                                        {
                                            @Model.TotalCustomersCurrentMonth
                                        }
                                        else
                                        {
                                            @Model.TotalCustomersCurrentYear
                                        }
                                    </h6>
                                    <span id="customer-change-percentage" class="@(ViewBag.CustomerChangePercentage >= 0 ? "text-success" : "text-danger") small pt-1 fw-bold">
                                        @(Math.Abs((double)ViewBag.CustomerChangePercentage).ToString("F2"))%
                                    </span>
                                    <span class="text-muted small pt-2 ps-1" id="customer-change-text">
                                        @(ViewBag.CustomerChangePercentage >= 0 ? "increase" : "decrease")
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div><!-- End Customers Card -->
                <!-- Reports -->
                <div class="col-12">
                    <div class="card">
                        <div class="filter">
                            <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                            <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                                <li class="dropdown-header text-start">
                                    <h6>Filter</h6>
                                </li>
                                <li><a class="dropdown-item" href="#" onclick="updateChart('Today')">Today</a></li>
                                <li><a class="dropdown-item" href="#" onclick="updateChart('This Month')">This Month</a></li>
                                <li><a class="dropdown-item" href="#" onclick="updateChart('This Year')">This Year</a></li>
                            </ul>
                        </div>

                        <div class="card-body">
                            <h5 class="card-title">Reports <span id="report-filter-label">| @ViewBag.ReportFilter</span></h5>
                            <div id="reportsChart"></div>
                        </div>
                    </div>
                </div><!-- End Reports -->
             
                <!-- Top Selling -->
                <div class="col-12">
                    <div class="card top-selling overflow-auto">
                        <div class="filter">
                            <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                            <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                                <li class="dropdown-header text-start">
                                    <h6>Filter</h6>
                                </li>
                                <li><a class="dropdown-item" href="@Url.Action("Index", "Dashboard", new { Area = "Admin", filter = ViewBag.FilterLabel, customerFilter = ViewBag.CustomerFilter, topSellingFilter = "Today" })">Today</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Index", "Dashboard", new { Area = "Admin", filter = ViewBag.FilterLabel, customerFilter = ViewBag.CustomerFilter, topSellingFilter = "This Month" })">This Month</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Index", "Dashboard", new { Area = "Admin", filter = ViewBag.FilterLabel, customerFilter = ViewBag.CustomerFilter, topSellingFilter = "This Year" })">This Year</a></li>
                            </ul>
                        </div>

                        <div class="card-body pb-0">
                            <h5 class="card-title">Top Selling <span>| @ViewBag.TopSellingFilter</span></h5>

                            <table class="table table-borderless">
                                <thead>
                                    <tr>
                                        <th scope="col">Preview</th>
                                        <th scope="col">Product</th>
                                        <th scope="col">Price</th>
                                        <th scope="col">Sold</th>
                                        <th scope="col">Revenue</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (ViewBag.TopSellingItems != null && ViewBag.TopSellingItems.Count > 0)
                                    {
                                        foreach (var item in ViewBag.TopSellingItems)
                                        {
                                            <tr>
                                                <th scope="row"><a href="#"><img src="@(item.ImageUrl ?? "assets/img/default-product.jpg")" alt=""></a></th>
                                                <td><a href="#" class="text-primary fw-bold">@item.ItemName</a></td>
                                                <td>@item.Price.ToString("#,##") VNĐ</td>
                                                <td class="fw-bold">@item.QuantitySold</td>
                                                <td>@item.TotalRevenue.ToString("#,##") VNĐ</td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="5" class="text-center">No data available</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div><!-- End Top Selling -->

            </div>
        </div><!-- End Left side columns -->

    </div>
</section>
<script src="~/js/dashboard.js"></script>
<script>
    function changeRevenueFilter(filter) {
        let revenue, percentage, changeText;

        if (filter === 'Today') {
            revenue = @Model.TotalRevenueToday;
            percentage = @Model.TodayRevenueChangePercentage;
        } else if (filter === 'This Month') {
            revenue = @Model.TotalRevenue;
            percentage = @Model.MonthRevenueChangePercentage;
        } else {
            revenue = @Model.TotalRevenueCurrentYear;
            percentage = @Model.YearRevenueChangePercentage;
        }

        changeText = percentage >= 0 ? 'increase' : 'decrease';

        document.getElementById('revenue-filter-label').innerText = '| ' + filter;
        document.getElementById('revenue-value').innerText = revenue.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) + ' VNĐ';
        document.getElementById('revenue-change-percentage').innerText = Math.abs(percentage).toFixed(2) + '%';
        document.getElementById('revenue-change-percentage').className = percentage >= 0 ? 'text-success small pt-1 fw-bold' : 'text-danger small pt-1 fw-bold';
        document.querySelector('#revenue-change-text').innerText = changeText;

        let currentUrl = new URL(window.location.href);
        currentUrl.searchParams.set('filter', filter);
        window.history.pushState({}, '', currentUrl);
    }

    // Hàm xử lý filter cho Customers Card
    function changeCustomerFilter(filter) {
        let count, percentage, changeText;

        if (filter === 'Today') {
            count = @Model.TotalCustomersToday;
            percentage = @Model.TodayCustomersChangePercentage;
        } else if (filter === 'This Month') {
            count = @Model.TotalCustomersCurrentMonth;
            percentage = @Model.MonthCustomersChangePercentage;
        } else {
            count = @Model.TotalCustomersCurrentYear;
            percentage = @Model.YearCustomersChangePercentage;
        }

        changeText = percentage >= 0 ? 'increase' : 'decrease';

        // Cập nhật giao diện
        document.getElementById('customer-filter-label').innerText = '| ' + filter;
        document.getElementById('customer-count').innerText = count;
        document.getElementById('customer-change-percentage').innerText = Math.abs(percentage).toFixed(2) + '%';
        document.getElementById('customer-change-percentage').className = percentage >= 0 ? 'text-success small pt-1 fw-bold' : 'text-danger small pt-1 fw-bold';
        document.getElementById('customer-change-text').innerText = changeText;

        // Cập nhật URL mà không tải lại trang
        let currentUrl = new URL(window.location.href);
        currentUrl.searchParams.set('customerFilter', filter);
        window.history.pushState({}, '', currentUrl);
    }

    // Hàm lấy filter hiện tại của Customers Card từ URL hoặc mặc định
    function getCurrentCustomerFilter() {
        let urlParams = new URLSearchParams(window.location.search);
        return urlParams.get('customerFilter') || 'This Year';
    }

    // Hàm lấy filter hiện tại của Reports Chart từ URL hoặc mặc định
    function getCurrentReportFilter() {
        let urlParams = new URLSearchParams(window.location.search);
        return urlParams.get('reportFilter') || 'Today';
    }

    // Hàm xử lý filter cho Reports Chart (giữ nguyên)
    let chart;
    function initChart(revenueData, customersData, timeCategories, reportFilter) {
        if (chart) {
            chart.destroy();
        }

        chart = new ApexCharts(document.querySelector("#reportsChart"), {
            series: [
                {
                    name: 'Revenue (VNĐ)',
                    data: revenueData
                },
                {
                    name: 'Customers',
                    data: customersData
                }
            ],
            chart: {
                height: 350,
                type: 'area',
                toolbar: {
                    show: false
                },
            },
            markers: {
                size: 4
            },
            colors: ['#4154f1', '#ff771d'],
            fill: {
                type: "gradient",
                gradient: {
                    shadeIntensity: 1,
                    opacityFrom: 0.3,
                    opacityTo: 0.4,
                    stops: [0, 90, 100]
                }
            },
            dataLabels: {
                enabled: false
            },
            stroke: {
                curve: 'smooth',
                width: 2
            },
            xaxis: {
                type: 'datetime',
                categories: timeCategories
            },
            tooltip: {
                x: {
                    format: reportFilter === 'Today' ? 'HH:mm' : reportFilter === 'This Month' ? 'dd/MM' : 'MM/yyyy'
                },
                y: {
                    formatter: function (val, { seriesIndex }) {
                        if (seriesIndex === 0) {
                            return val.toLocaleString() + ' VNĐ';
                        } else {
                            return val.toString();
                        }
                    }
                }
            },
            yaxis: [
                {
                    title: {
                        text: 'Revenue (VNĐ)'
                    }
                },
                {
                    opposite: true,
                    title: {
                        text: 'Customers'
                    }
                }
            ]
        });
        chart.render();
    }

    function updateChart(reportFilter) {
        fetch('@Url.Action("GetChartData", "Dashboard", new { Area = "Admin" })?reportFilter=' + reportFilter)
            .then(response => response.json())          
            .then(data => {
                document.getElementById('report-filter-label').innerText = '| ' + reportFilter;
                let currentUrl = new URL(window.location.href);
                currentUrl.searchParams.set('reportFilter', reportFilter);
                window.history.pushState({}, '', currentUrl);
                initChart(data.revenueData, data.customersData, data.timeCategories, reportFilter);
            })
            .catch(error => console.error('Error fetching chart data:', error));
    }

    document.addEventListener("DOMContentLoaded", () => {
        updateChart('@ViewBag.ReportFilter');
    });
</script>